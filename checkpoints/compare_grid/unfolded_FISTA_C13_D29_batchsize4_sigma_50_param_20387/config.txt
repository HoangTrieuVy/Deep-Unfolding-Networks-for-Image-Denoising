Net(unfolded_FISTA(
  (mse): MSELoss()
  (conv): ModuleList(
    (0): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (2): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (4): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (6): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (8): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (10): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (12): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (14): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (16): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (18): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (20): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (22): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (23): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (24): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (26): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (27): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (28): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (30): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (32): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (34): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (36): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (38): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (40): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (42): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (44): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (45): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (46): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (48): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (49): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (50): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (52): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (54): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (56): Conv2d(3, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): Conv2d(13, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
))
TrainSet(NoisyBSDSDataset(mode=train, image_size=(180, 180), sigma=50))
ValSet(NoisyBSDSDataset(mode=test, image_size=(320, 320), sigma=50))
Optimizer(Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
))
StatsManager(DenoisingStatsManager)
BatchSize(4)
PerformValidationDuringTraining(True)

